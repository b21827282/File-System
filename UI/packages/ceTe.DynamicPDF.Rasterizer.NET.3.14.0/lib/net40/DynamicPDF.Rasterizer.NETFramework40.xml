<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DynamicPDF.Rasterizer.NETFramework40</name>
    </assembly>
    <members>
        <member name="T:ceTe.DynamicPDF.Rasterizer.Attachment">
             <summary>
             Represents Attachments present in PDFDocument
             </summary>
             <example>The following examples retrieves the attachment files in the PDFDocument and rasterizes the attachment PDF.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create an InputPdf object to hold the source PDF
                     Dim MyInputPdf As InputPdf = New InputPdf("C:\MyDocument.pdf")
            
                     ' Getting the AttachmentFiles present in PDFDocument
                     Dim files() As Attachment =  MyInputPdf.Attachments 
                    
                     ' Gets the InputPdf file present in AttachmentFiles
                     Dim MyInputPdfFile As InputPdf =  files(0).TryGetPDF() 
            
                     ' Create a PdfRasterizer object.
            			Dim rasterizer As PdfRasterizer = New PdfRasterizer(MyInputPdfFile)
            
                     ' Save the image.   
            			rasterizer.Draw("Output.png", ImageFormat.Png,ImageSize.Dpi96);			
                          
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                 static void Main()
                 {
            	        // Create an InputPdf object to hold the source PDF
                     InputPdf inputPdf = new InputPdf(@"C:\MyDocument.pdf");
                    
                     //Getting the AttachmentFiles present in PDFDocument
            		    Attachment[] files = inputPdf.Attachments;
            
                     //Gets the InputPdf file present in AttachmentFiles
                     InputPdf inputPdfFile = files[0].TryGetPdf();
            
            			// Create a PdfRasterizer object.
            			PdfRasterizer rasterizer = new PdfRasterizer(inputPdfFile);
            
            			// Save the image.
            			rasterizer.Draw("Output.png", ImageFormat.Png,ImageSize.Dpi96);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.Attachment.FileName">
            <summary>
            Gets the Filenames of the Attachment Files present in PDFDocument.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.Attachment.TryGetPdf">
            <summary>
            Gets the Data of the Attachment Files.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.Attachment.TryGetPdf(System.String)">
            <summary>
            Gets the InputPdf file of the Attachment Files.
            </summary>
            <param name="password">The string containing the password.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.AutoPalette">
             <summary>
             Represents an AutoPalette class which can be used to create an image specific palette.
             </summary>
             <example>This example demonstrates how to rasterize a pdf document to PNG image with an image specific palette.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")	
            
                     ' Create a pngIndexedColorFormat object.
                     Dim pngIndexedColorFormat As PngIndexedColorFormat  = New PngIndexedColorFormat(ImageFormat.DefaultColorPalette,100,DitheringAlgorithm.FloydSteinberg)
            			
                     ' Set the ColorPalette property to  AutoPalette.
                     pngIndexedColorFormat.ColorPalette = New AutoPalette(QuantizationAlgorithm.Octree, 256)
            
                     ' Create a pngImageFormat using pngIndexedColorFormat object.
                     Dim pngImageFormat As PngImageFormat  = New PngImageFormat(pngIndexedColorFormat)		
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72)
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a pngIndexedColorFormat object.
                     PngIndexedColorFormat pngIndexedColorFormat = new PngIndexedColorFormat(ImageFormat.DefaultColorPalette,100,DitheringAlgorithm.FloydSteinberg);
            
                     // Set the ColorPalette property to  AutoPalette.
                     pngIndexedColorFormat.ColorPalette = new AutoPalette(QuantizationAlgorithm.Octree, 256);
            
                     // Create a pngImageFormat using pngIndexedColorFormat object.
                     PngImageFormat pngImageFormat = new PngImageFormat(pngIndexedColorFormat);
             
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.AutoPalette.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.AutoPalette"/> class.
            </summary>				
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.AutoPalette.#ctor(ceTe.DynamicPDF.Rasterizer.QuantizationAlgorithm)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.AutoPalette"/> class.
            </summary>
            <param name="quantizationAlgorithm">Variable of type QuantizationAlgorithm which can be used to specify quantization algorithm.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.AutoPalette.#ctor(ceTe.DynamicPDF.Rasterizer.QuantizationAlgorithm,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.AutoPalette"/> class.
            </summary>				
            <param name="quantizationAlgorithm">Variable of type QuantizationAlgorithm which can be used to specify quantization algorithm.</param>
            <param name="maxPaletteSize">Maximum size of palette.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.AutoPalette.QuantizationAlgorithm">
            <summary>
            Gets or sets palette selection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.AutoPalette.MaxPaletteSize">
            <summary>
            Gets or sets maximum size of the palette.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.BitmapColorFormat">
             <summary>
             Represents Bitmap color formats.
             </summary>
             <example>This example demonstrates the use of BitmapColorFormat class.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
                 Sub Main()
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a FixedImageSize object with required width,height and UnitType.
                     Dim fixedImageSize As FixedImageSize = New FixedImageSize(595, 841, UnitType.Point)
            
                     ' Get the Bitmap.
                     Dim bmp As System.Drawing.Bitmap = rasterizer.Pages(0).DrawToBitmap(BitmapColorFormat.Grayscale, fixedImageSize)
            
                     ' Save the image.
                     bmp.Save("Output.gif")
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a FixedImageSize object with required width,height and UnitType.
                     FixedImageSize fixedImageSize = new FixedImageSize(595, 841, UnitType.Point);
            
                     // Get the Bitmap.
                     System.Drawing.Bitmap bmp = rasterizer.Pages[0].DrawToBitmap(BitmapColorFormat.Grayscale, fixedImageSize);
            
                     // Save the image.
                     bmp.Save("Output.gif");
                 }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.BitmapColorFormat.Grayscale">
            <summary>
            Color format Grayscale.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.BitmapColorFormat.Monochrome">
            <summary>
            Color format Monochrome.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.BitmapColorFormat.Rgb">
            <summary>
            Color format Rgb.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.BitmapColorFormat.RgbA">
            <summary>
            Color format RgbA.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.BmpColorFormat">
             <summary>
             Base class that represents an color format supported by BMP image format.
             <remarks>
             BmpColorFormat's derived classes are: <see cref="T:ceTe.DynamicPDF.Rasterizer.BmpRgbColorFormat"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.BmpMonochromeColorFormat"/>
             </remarks>
             </summary>
             <example>This example demonstrates how to rasterize a pdf document to a Bmp image using BmpColorFormat.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
                 Sub Main()
                     'Create a PdfRasterizer object.
                     Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
                     'Create a BmpColorFormat object.
                     Dim bmpColorFormat As BmpColorFormat = bmpColorFormat.Rgb
            
                     'Create a BmpImageFormat object using BmpColorFormat object.
                     Dim bmpImageFormat As New BmpImageFormat(bmpColorFormat)
            
                     'Save the image.
                     rasterizer.Draw("Output.bmp", bmpImageFormat, ImageSize.Dpi72)
                 End Sub
             End Module
             </code>
             <code lang="C#">
            	using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     //Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     //Create a BmpColorFormat object.
                     BmpColorFormat bmpColorFormat = BmpColorFormat.Rgb;
            
                     //Create a BmpImageFormat object using BmpColorFormat object.
                     BmpImageFormat bmpImageFormat = new BmpImageFormat(bmpColorFormat);
            
                     // Save the image.
                     rasterizer.Draw("Output.bmp", bmpImageFormat, ImageSize.Dpi72);
                 }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.BmpColorFormat.Monochrome">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.BmpMonochromeColorFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.BmpColorFormat.Rgb">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.BmpRgbColorFormat"/> class.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.BmpImageFormat">
             <summary>
             Represents a BMP image format.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to BMP image.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
                 
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                      ' Create a BmpImageFormat object.
                     Dim bmpImageFormat As BmpImageFormat = New BmpImageFormat(BmpColorFormat.Rgb)
            
                     ' Save the image.
                     rasterizer.Draw("Output.bmp", bmpImageFormat, ImageSize.Dpi72)
             		
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a BmpImageFormat object.
                     BmpImageFormat bmpImageFormat = new BmpImageFormat(BmpColorFormat.Rgb);
            
                     // Save the image.
                     rasterizer.Draw("Output.bmp", bmpImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.BmpImageFormat.#ctor(ceTe.DynamicPDF.Rasterizer.BmpColorFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.BmpImageFormat"/> class.
            </summary>
            <param name="colorFormat">Color format of the BMP image.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.BmpImageFormat.ColorFormat">
            <summary>
            Gets or sets the BMP color format.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.BmpMonochromeColorFormat">
             <summary>
             Represents a monochrome color format supported by BMP.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to BMP monochrome images.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
                 
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a BmpRgbColorFormat object.
            	        Dim bmpColorFormat As BmpMonochromeColorFormat  = New BmpMonochromeColorFormat(DitheringAlgorithm.FloydSteinberg, 90)
            
                      ' Create a BmpImageFormat object.
                     Dim bmpImageFormat As BmpImageFormat = New BmpImageFormat(bmpColorFormat)
            
                     ' Save the image.
                     rasterizer.Draw("Output.bmp", bmpImageFormat, ImageSize.Dpi72)
             		
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a BmpRgbColorFormat object.
                     BmpMonochromeColorFormat bmpColorFormat = new BmpMonochromeColorFormat(DitheringAlgorithm.FloydSteinberg, 90);
            
                     // Create a BmpImageFormat object.
                     BmpImageFormat bmpImageFormat = new BmpImageFormat(bmpColorFormat);
            
                     // Save the image.
                     rasterizer.Draw("Output.bmp", bmpImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.BmpMonochromeColorFormat.#ctor(ceTe.DynamicPDF.Rasterizer.DitheringAlgorithm,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.BmpMonochromeColorFormat"/> class.
            </summary>
            <param name="ditheringAlgorithm">Specify a dithering algorithm.</param>
            <param name="ditheringPercent">pecify value of dithering in percentage.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.BmpMonochromeColorFormat.DitheringAlgorithm">
            <summary>
            Gets or sets a dithering algorithm. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.BmpMonochromeColorFormat.DitheringPercent">
            <summary>
            Gets or sets the value of dithering in percentage. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.BmpMonochromeColorFormat.BlackThreshold">
            <summary>
            Gets or sets the value of black threshold. 
            </summary>
            <remarks>
            Value of black threshold should be between 0 and 255. All pixels with color value below or equal to black threshold will be converted to black and all pixels with color value 
            above black threshold will be converted to white.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.BmpRgbColorFormat">
             <summary>
             Represents a RGB color format supported by BMP image.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to BMP RGB images.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
                 
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            			
                      ' Create a BmpImageFormat object.
                     Dim bmpImageFormat As BmpImageFormat = New BmpImageFormat(BmpColorFormat.Rgb)
            
                     ' Save the image.
                     rasterizer.Draw("Output.bmp", bmpImageFormat, ImageSize.Dpi72)
             		
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a BmpImageFormat object.
                     BmpImageFormat bmpImageFormat = new BmpImageFormat(BmpColorFormat.Rgb);
            
                     // Save the image.
                     rasterizer.Draw("Output.bmp", bmpImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.DitheringAlgorithm">
             <summary>
             Represents different dithering algorithms. 
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to Gif image using FloydSteinberg dithering.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
            
            	Sub Main()
            		'Create a PdfRasterizer object.
            		Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
            		'Create a GifImageFormat object.
            		Dim gifImageFormat As New GifImageFormat()
            
            		'Set the DitheringAlgorithm to FloydSteinberg.
            		gifImageFormat.DitheringAlgorithm = DitheringAlgorithm.FloydSteinberg
            
            		'Set the size.
            		Dim fixedImageSize As New FixedImageSize(595, 841)
            
            		'Save the image.
            		rasterizer.Draw("Output.Gif", gifImageFormat, fixedImageSize)
            
            	End Sub
            
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            		
             class MyClass
             {
            	 static void Main(string[] args)
            	 {
            		 //Create a PdfRasterizer object.
            		 PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
            		 //Create a GifImageFormat object.
            		 GifImageFormat gifImageFormat = new GifImageFormat();
            
            		 //Set the DitheringAlgorithm to FloydSteinberg.
            		 gifImageFormat.DitheringAlgorithm = DitheringAlgorithm.FloydSteinberg;
            
            		 //Set the size.
            		 FixedImageSize fixedImageSize = new FixedImageSize(595, 841);
            
            		 //Save the image.
            		 rasterizer.Draw("Output.Gif", gifImageFormat, fixedImageSize);
            	 }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.DitheringAlgorithm.FloydSteinberg">
            <summary>
            Floyd-Steinberg diffusion kind of algorithm.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.DitheringAlgorithm.Bayer">
            <summary>
            Bayer's pattern based algorithm.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.DitheringAlgorithm.None">
            <summary>
            No Dithering.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.DocumentLoadException">
            <summary>
            Represents a DocumentLoadException
            </summary>
            <licensing>
            This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF Rasterizer for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize">
             <summary>
             Represents a DPI image size.
             </summary>
             <example>This example demonstrates how to rasterize a pdf document to a specific DPI.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
                 
                     ' Create PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf") 			
            
                     ' Create a PngImageFormat object.
                     Dim pngImageFormat As PngImageFormat = New PngImageFormat(PngColorFormat.Rgb)
              
                     ' Create a ImageSize object.
                     Dim ImageSize As DpiImageSize = New DpiImageSize(72.0F, 72.0F)
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize)
             		
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a PngImageFormat object.
                     PngImageFormat pngImageFormat = new PngImageFormat(PngColorFormat.Rgb);
             
                     // Create a ImageSize object.
                     DpiImageSize imagesize = new DpiImageSize(72.0f, 72.0f);
            
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, imagesize);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.DpiImageSize.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize"/> class.
            </summary>
            <param name="horizontalDpi">Specify dots per inch in horizontal direction.</param>
            <param name="verticalDpi">Specify dots per inch in vertical direction.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.DpiImageSize.HorizontalDpi">
            <summary>
            Gets or sets the horizontal resolution of the image. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.DpiImageSize.VerticalDpi">
            <summary>
            Gets or sets the vertical resolution of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.FixedImageSize">
             <summary>
             Represents a fixed image size.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to a fixed image size.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a JpegImageFormat object.
                     Dim jpegImageFormat As JpegImageFormat = New JpegImageFormat(90)
                
                     ' Create a FixedImageSize object.
                     Dim fixedImageSize As FixedImageSize = New FixedImageSize(500.0F, 500.0F)
            
                     ' Save the image.
                     rasterizer.Draw("Output.jpg", jpegImageFormat, fixedImageSize)
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
                        
                     // Create a JpegImageFormat object.
                     JpegImageFormat jpegImageFormat = new JpegImageFormat(90);
                         
                     // Create a FixedImageSize object.
                     FixedImageSize fixedImageSize = new FixedImageSize(500.0f, 500.0f);
            
                     // Save the image.
                     rasterizer.Draw("Output.jpg", jpegImageFormat, fixedImageSize);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.FixedImageSize.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.FixedImageSize"/> class.
            </summary>
            <param name="width">Specify width of fixed size image in pixels.</param>
            <param name="height">Specify height offixed size image in pixels.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.FixedImageSize.#ctor(System.Single,System.Single,ceTe.DynamicPDF.Rasterizer.UnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.FixedImageSize"/> class.
            </summary>
            <param name="width">Width of the image.</param>
            <param name="height">Height of the image.</param>
            <param name="units">Unit type of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.FixedImageSize.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Rasterizer.UnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.FixedImageSize"/> class.
            </summary>
            <param name="width">Width of the image.</param>
            <param name="height">Height of the image.</param>
            <param name="horizontalDpi">Horizondal dpi of the image.</param>
            <param name="verticalDpi">Vertical dpi of the image.</param>
            <param name="units">Unit type of the image.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.FixedImageSize.Width">
            <summary>
            Gets or sets width of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.FixedImageSize.Height">
            <summary>
            Gets or sets height of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.FixedImageSize.UnitType">
            <summary>
            Gets or sets unit type of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.FixedImageSize.HorizontalDpi">
            <summary>
            Gets or sets horizontal DPI of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.FixedImageSize.VerticalDpi">
            <summary>
            Gets or sets vertical DPI of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.GifImageFormat">
             <summary>
             Represents a GIF image format.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to GIF images.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Save the image.
                     rasterizer.Draw("Output.gif", ImageFormat.Gif, ImageSize.Dpi72)
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
             
                     // Save the image.
                     rasterizer.Draw("Output.gif", ImageFormat.Gif, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.GifImageFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.GifImageFormat"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.GifImageFormat.#ctor(ceTe.DynamicPDF.Rasterizer.Palette)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.GifImageFormat"/> class.
            </summary>
            <param name="colorPalette">Color palette of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.GifImageFormat.#ctor(ceTe.DynamicPDF.Rasterizer.Palette,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.GifImageFormat"/> class.
            </summary>
            <param name="colorPalette">Color palette of the image.</param>
            <param name="ditheringPercent">Dithering Percentage of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.GifImageFormat.#ctor(ceTe.DynamicPDF.Rasterizer.Palette,System.Int32,ceTe.DynamicPDF.Rasterizer.DitheringAlgorithm)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.GifImageFormat"/> class.
            </summary>
            <param name="colorPalette">Color palette of the image.</param>
            <param name="ditheringPercent">Dithering Percentage of the image.</param>
            <param name="ditheringAlgorithm">Dithering Algorithm of the image.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.GifImageFormat.DitheringPercent">
            <summary>
            Gets or sets the value of dithering percentage. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.GifImageFormat.DitheringAlgorithm">
            <summary>
            Gets or sets a dithering algorithm. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.GifImageFormat.ColorPalette">
            <summary>
            Gets or sets a palette type. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.ImageFormat">
             <summary>
             Base class that represents an image format. 
             <remarks>
             ImageFormat's derived classes are: <see cref="T:ceTe.DynamicPDF.Rasterizer.BmpImageFormat"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.GifImageFormat"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.JpegImageFormat"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.PngImageFormat"/> and <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffImageFormat"/>. See the <a href="DynamicPDFRasterizerProgrammingWithOutputImageFormat.html">Output Image Format</a> topic for more on Image Formats.
             </remarks>
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to Gif image using ImageFormat class.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
                Sub Main()
                    'Create a PdfRasterizer object.
                    Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
                    'Set the size.
                    Dim fixedImageSize As New FixedImageSize(595, 841)
            
                    'Save the image.
                    rasterizer.Draw("Output.Gif", ImageFormat.Gif, fixedImageSize)
            
                End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                static void Main(string[] args)
                {
                    //Create a PdfRasterizer object.
                    PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                    //Set the size.
                    FixedImageSize fixedImageSize = new FixedImageSize(595, 841);
            
                    //Save the image.
                    rasterizer.Draw("Output.Gif", ImageFormat.Gif, fixedImageSize);
                }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.Jpeg">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.JpegImageFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.Bmp">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.BmpImageFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.Gif">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.GifImageFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.Png">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.PngImageFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.TiffWithCcitGroup3">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffImageFormat"/> class with CCIT Group 3 compression specified.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.TiffWithCcitGroup4">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffImageFormat"/> class with CCIT Group 4 compression specified.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.TiffWithLzw">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffImageFormat"/> class with JPEG compression specified.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.AntiAliasing">
            <summary>
            Gets or Sets the AntiAliasing value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.DefaultDitheringPercent">
            <summary>
            Gets or Sets the default dithering percentage.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.DefaultDitheringAlgorithm">
            <summary>
            Gets or Sets the default dithering algorithm.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.DefaultColorPalette">
            <summary>
            Gets or Sets the default color palette.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageFormat.DefaultBlackThreshold">
            <summary>
            Gets or sets the default value of black threshold. 
            </summary>
            <remarks>
            Value of black threshold should be between 0 and 255. All pixels with color value below or equal to black threshold will be converted to black and all pixels with color value 
            above black threshold will be converted to white.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.ImageSize">
             <summary>
             Base class which represents an image size.
             <remarks>
             ImageSize's derived classes are: <see cref="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.FixedImageSize"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.MaxImageSize"/> and <see cref="T:ceTe.DynamicPDF.Rasterizer.PercentageImageSize"/>. See the <a href="DynamicPDFRasterizerProgrammingWithOutputImageSize.html">Output Image Size</a> topic for more on Image Sizes.
             </remarks>
             </summary>
             <example>This This example demonstrates the usage of ImageSize class.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
                Sub Main()
            
                    ' Create a PdfRasterizer object.
                    Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
                    ' Save the image with 72 dots per inch vertical and horizontal resolution.
                    rasterizer.Draw("Output.gif", ImageFormat.Gif, ImageSize.Dpi72)
            
                End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                static void Main(string[] args)
                {
                    // Create a PdfRasterizer object.
                    PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                    // Save the image with 72 dots per inch vertical and horizontal resolution.
                    rasterizer.Draw("Output.gif", ImageFormat.Gif, ImageSize.Dpi72);
                }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageSize.HorizontalDpi">
            <summary>
            Gets or sets the horizontal DPI of an image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageSize.VerticalDpi">
            <summary>
            Gets or sets the vertical DPI of an image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageSize.Dpi72">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize"/> class set to 72 DPI.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageSize.Dpi96">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize"/> class set to 96 DPI.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageSize.Dpi150">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize"/> class set to 150 DPI.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageSize.Dpi300">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize"/> class set to 300 DPI.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageSize.Dpi600">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize"/> class set to 600 DPI.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageSize.FaxStandard">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize"/> class set to the standard fax DPI.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageSize.FaxFine">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize"/> class set to the fine fax DPI.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.ImageSize.FaxSuperfine">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.DpiImageSize"/> class set to the super fine fax DPI.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.InputPdf">
             <summary>
             Represents an input PDF.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to JPEG.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create an InputPdf object.
                     Dim input As InputPdf = New InputPdf("InputPdfFile.pdf")
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer(input)
            
                     ' Create a JpegImageFormat object.
                     Dim jpegImageFormat As JpegImageFormat = New JpegImageFormat(80)
            
                     ' Save the image.
                     rasterizer.Draw("Output.jpg", jpegImageFormat, ImageSize.Dpi72)
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create an InputPdf object.
                     InputPdf input = new InputPdf("InputPdfFile.pdf");
            
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer(input);
                         
                     // Create a JpegImageFormat object.
                     JpegImageFormat jpegImageFormat = new JpegImageFormat(80);
            
                     // Save the image.
                     rasterizer.Draw("Output.jpg", jpegImageFormat,ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdf.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.InputPdf"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdf.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.InputPdf"/> class.
            </summary>
            <param name="data">Byte array of the input PDF data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdf.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.InputPdf"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF.</param>
            <param name="password">Password to open the PDF file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdf.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.InputPdf"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/>containing the PDF data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdf.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.InputPdf"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/>containing the PDF data.</param>
            <param name="password">Password to open the PDF file. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdf.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.InputPdf"/> class.
            </summary>
            <param name="data">Byte array of the input PDF data. </param>
            <param name="password">Password to open the PDF file.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdf.Pages">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Rasterizer.InputPdfPageList"/> containing the pages of the input PDF.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdf.Title">
            <summary>
            Gets the title property of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdf.Author">
            <summary>
            Gets the author property of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdf.Subject">
            <summary>
            Gets the subject property of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdf.Keywords">
            <summary>
            Gets the keywords property of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdf.Creator">
            <summary>
            Gets the creator property of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdf.Producer">
            <summary>
            Gets the producer property of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdf.Attachments">
            <summary>
            Gets the Attachment Files of PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdf.Collection">
            <summary>
            
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdf.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdf.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.InputPdfPage">
            <summary>
            Represents a page in an input PDF.
            </summary>
            <licensing>
            This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF Rasterizer for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdfPage.Height">
            <summary>
            Gets the Height of the page in points.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdfPage.Width">
            <summary>
            Gets the width of the page in points.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdfPage.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdfPage.Dispose">
            <summary>
            Releases all resources that are used by the current instance of the class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdfPage.Dispose(System.Boolean)">
            <summary>
            Releases all resources that are used by the current instance of the class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.InputPdfPageList">
            <summary>
            Represents a list of input PDF pages.
            </summary>
            <licensing>
            This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF Rasterizer for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdfPageList.Count">
            <summary>
            Gets the number of pages in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.InputPdfPageList.Item(System.Int32)">
            <summary>
            Gets a page by index.
            </summary>
            <param name="index">The index of the page.</param>
            <returns>Returns a <see DynamicPDF.Toolkit="InputPdfPage"/>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdfPageList.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdfPageList.Dispose">
            <summary>
            Releases all resources that are used by the current instance of the class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.InputPdfPageList.Dispose(System.Boolean)">
            <summary>
            Releases all resources that are used by the current instance of the class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.InvalidPasswordException">
            <summary>
            Represents an InvalidPasswordException
            </summary>
            <licensing>
            This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF Rasterizer for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.JpegImageFormat">
             <summary>
             Represents a JPEG image format.
             </summary>
             <example>This example demonstrates how to draw a PDF document to a JPEG images.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a JpegImageFormat.
                     Dim jpegImageFormat As JpegImageFormat = New JpegImageFormat(80)
            
                     ' Save the image.
                     rasterizer.Draw("Output.jpg", jpegImageFormat, ImageSize.Dpi72)
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
                        
                     // Create a JpegImageFormat.
                     JpegImageFormat jpegImageFormat = new JpegImageFormat(80);    
            
                     // Save the image.
                     rasterizer.Draw("Output.jpg", jpegImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.JpegImageFormat.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.JpegImageFormat"/> class.
            </summary>
            <param name="quality">Quality of the jpeg image.</param>
            <remarks> The value ranges from 0 to 100,where 0 indicates highly compressed and low quality and 100 indicates high quality and less compressed image. 
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.JpegImageFormat.Quality">
            <summary>
            Gets or sets the image quality.The value ranges from 0 to 100.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.MaxImageSize">
             <summary>
             Represents a maximum image size.
             </summary>
             <remarks>
             Maintains the aspect ratio of the image. 
             </remarks>
             <example>This example demonstrates how to rasterize a PDF document to the maximum size while maintaining its aspect ratio.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a JpegImageFormat object.
                     Dim jpegImageFormat As JpegImageFormat = New JpegImageFormat(90)
            
                     ' Create a MaxImageSize object.
                     Dim maxImageSize As MaxImageSize = New MaxImageSize(800.0F, 400.0F)
            
                     ' Save the image.
                     rasterizer.Draw("Output.jpg", jpegImageFormat, maxImageSize)
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
                         
                     // Create a JpegImageFormat object.
                     JpegImageFormat jpegImageFormat =  new JpegImageFormat(90);
                        
                     // Create a MaxImageSize object.
                     MaxImageSize maxImageSize = new MaxImageSize(800.0f, 400.0f);
             
                     // Save the image.
                     rasterizer.Draw("Output.jpg",jpegImageFormat,maxImageSize);
                 }
             }
             </code>
             </example> 
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.MaxImageSize.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.MaxImageSize"/> class.
            </summary>
            <param name="maxWidth">Maximum width of the image.</param>
            <param name="maxHeight">Maximum height of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.MaxImageSize.#ctor(System.Single,System.Single,ceTe.DynamicPDF.Rasterizer.UnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.MaxImageSize"/> class.
            </summary>
            <param name="maxWidth">Maximum width of the image.</param>
            <param name="maxHeight">Maximum height of the image.</param>
            <param name="units"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.MaxImageSize.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Rasterizer.UnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.MaxImageSize"/> class.
            </summary>
            <param name="maxWidth">Maximum width of the image.</param>
            <param name="maxHeight">Maximum height of the image.</param>
            <param name="horizontalDpi">Horizontal dpi of the image.</param>
            <param name="verticalDpi">Vertical dpi of the image.</param>
            <param name="units"></param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.MaxImageSize.MaxWidth">
            <summary>
            Gets or sets maximum width of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.MaxImageSize.MaxHeight">
            <summary>
            Gets or sets maximum height of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.MaxImageSize.HorizontalDpi">
            <summary>
            Gets or sets horizontal DPI of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.MaxImageSize.VerticalDpi">
            <summary>
            Gets or sets vertical DPI of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.Palette">
             <summary>
             Base class that represents a palette. 
             <remarks>
             Palette's derived classes are: <see cref="T:ceTe.DynamicPDF.Rasterizer.AutoPalette"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.UserPalette"/>, <see cref="P:ceTe.DynamicPDF.Rasterizer.Palette.WebPalette"/>, <see cref="P:ceTe.DynamicPDF.Rasterizer.Palette.WindowsPalette"/>. 
             </remarks>
             </summary>
             <example>This example demonstrates the usage of Palette class.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
                 Sub Main()
            
                    ' Create a PdfRasterizer object.
                    Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
                    ' Create a GifImageFormat.
                    Dim gifImageFormat As New GifImageFormat()
            
                    ' Set the Color palette property to WebPalette.
                    gifImageFormat.ColorPalette = Palette.WebPalette
            
                    ' Set the size.
                    Dim fixedImageSize As New FixedImageSize(595, 841)
            
                    ' Save the image.
                    rasterizer.Draw("Output.Gif", gifImageFormat, fixedImageSize)
            
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                static void Main(string[] args)
                {
                    // Create a PdfRasterizer object.
                    PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                    // Create a GifImageFormat.
                    GifImageFormat gifImageFormat = new GifImageFormat();
            
                    // Set the Color palette property to WebPalette.
                    gifImageFormat.ColorPalette = Palette.WebPalette;
            
                    // Set the size.
                    FixedImageSize fixedImageSize = new FixedImageSize(595, 841);
            
                    // Save the image.
                    rasterizer.Draw("Output.Gif", gifImageFormat, fixedImageSize);
                }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.Palette.WebPalette">
            <summary>
            Gets a default <see cref="P:ceTe.DynamicPDF.Rasterizer.Palette.WebPalette"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.Palette.WindowsPalette">
            <summary>
            Gets a default <see cref="P:ceTe.DynamicPDF.Rasterizer.Palette.WindowsPalette"/> class.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PdfException">
            <summary>
            Represents a PdfRasterizerException
            </summary>
            <licensing>
            This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF Rasterizer for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.ProgressChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.RasterizerProgress"/> event.
            </summary>
            <remarks>When you create a <b>ProgressChangedEventHandler</b> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate. </remarks>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:ceTe.DynamicPDF.Rasterizer.RasterizerProgressChangedEventArgs"/> that contains the event data.</param>
            <example> For example refer to <see cref="E:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.RasterizerProgress"/> event. </example>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PdfRasterizer">
             <summary>
             Represents a PDF rasterizer.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Save the image.
                     rasterizer.DrawToMultiPageTiff("Output.tif", TiffImageFormat.TiffWithLzw, ImageSize.Dpi72)
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
                         
                     // Save the image.
                     rasterizer.DrawToMultiPageTiff("Output.tif", TiffImageFormat.TiffWithLzw, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PdfRasterizer"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF to rasterize.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.#ctor(ceTe.DynamicPDF.Rasterizer.InputPdf)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PdfRasterizer"/> class.
            </summary>
            <param name="inputPdf">Represents an input PDF to rasterize.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PdfRasterizer"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF to rasterize.</param>
            <param name="startPageNumber">Starting page number of the PDF to rasterize.</param>
            <param name="pageCount">Total page count of the PDF to rasterize.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.#ctor(ceTe.DynamicPDF.Rasterizer.InputPdf,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PdfRasterizer"/> class.
            </summary>
            <param name="inputPdf">Represents an input PDF to rasterize.</param>
            <param name="startPageNumber">Starting page number of the PDF to rasterize.</param>
            <param name="pageCount">Total page count of the PDF to rasterize.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.DrawToMultiPageTiff(System.IO.Stream,ceTe.DynamicPDF.Rasterizer.TiffImageFormat,ceTe.DynamicPDF.Rasterizer.ImageSize)">
            <summary>
            Rasterizes all pages in the page list to a multi-page TIFF image and stores it to the given stream.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/>containing the Pdf data.</param>
            <param name="tiffImageFormat">Represents the TIFF image format to use.</param>
            <param name="imageSize">Represents image size to use. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.AddLicense(System.String)">
            <summary>
            Adds a license key.
            </summary>
            <param name="licenseKey">The license key to add.</param>
            <returns>A boolean value indicating if the license is valid.</returns>
            <remarks>This method accepts a license key, not a serial number.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.Append(System.String)">
            <summary>
            Append the entire PDF document to the list of pages to rasterize.
            </summary>
            <param name="filePath">Physical file path of the PDF to rasterize. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.Append(ceTe.DynamicPDF.Rasterizer.InputPdf)">
            <summary>
            Append the entire PDF document to the list of pages to rasterize.
            </summary>
            <param name="inputPdf">Represents an input PDF to rasterize.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.Append(System.String,System.Int32,System.Int32)">
            <summary>
            Append the entire PDF document to the list of pages to rasterize.
            </summary>
            <param name="filePath">Physical file path of the Pdf </param>
            <param name="startPageNumber">Starting page number of the PDF to rasterize.</param>
            <param name="pageCount">Total page count of the PDF to rasterize.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.Append(ceTe.DynamicPDF.Rasterizer.InputPdf,System.Int32,System.Int32)">
            <summary>
            Append the entire pages of the pdf document to the PdfRasterizerPageList.
            </summary>
            <param name="inputPdf">Represents an input PDF to rasterize.</param>
            <param name="startPageNumber">Starting page number of the PDF to rasterize.</param>
            <param name="pageCount">Total page count of the PDF to rasterize.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.Pages">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPageList"/> containing the pages to rasterize.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.Draw(System.String,ceTe.DynamicPDF.Rasterizer.ImageFormat,ceTe.DynamicPDF.Rasterizer.ImageSize)">
            <summary>
            Rasterizes all pages in the page list to an image and stores the image to the given filename.
            </summary>
            <param name="fileName">Physical file path of the image.</param>
            <param name="imageFormat">Represents the image format to use.</param>
            <param name="imageSize">Represents image size to use. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.Draw(ceTe.DynamicPDF.Rasterizer.ImageFormat,ceTe.DynamicPDF.Rasterizer.ImageSize)">
            <summary>
            Rasterizes all pages in the page list to an array of byte arrays containing the image data. 
            </summary>
            <param name="imageFormat">Represents the image format to use.</param>
            <param name="imageSize">Represents image size to use. </param>
            <returns>Returns the array of byte arrays containing the image data.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.DrawToMultiPageTiff(System.String,ceTe.DynamicPDF.Rasterizer.TiffImageFormat,ceTe.DynamicPDF.Rasterizer.ImageSize)">
            <summary>
            Rasterizes all pages in the page list to a multi-page TIFF image and stores it to the given filename.
            </summary>
            <param name="fileName">Physical filepath of the image.</param>
            <param name="tiffImageFormat">Represents the TIFF image format to use.</param>
            <param name="imageSize">Represents image size to use. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.DrawToMultiPageTiff(ceTe.DynamicPDF.Rasterizer.TiffImageFormat,ceTe.DynamicPDF.Rasterizer.ImageSize)">
            <summary>
            Rasterizes all pages in the page list to a multi-page TIFF image and stores it to the given filename.
            </summary>
            <param name="tiffImageFormat">Represents the TIFF image format to use.</param>
            <param name="imageSize">Represents image size to use. </param>
        </member>
        <member name="E:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.RasterizerProgress">
             <summary>
             Represents a progress event to inform about the number of pages rasterized.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            			
            			 AddHandler rasterizer.RasterizerProgress, AddressOf RasterizerProgressing
            
                     ' Save the image.
                     rasterizer.DrawToMultiPageTiff("Output.tif", TiffImageFormat.TiffWithLzw, ImageSize.Dpi72)
            
                 End Sub
            
            		Private Sub RasterizerProgressing(sender As Object, e As RasterizerProgressChangedEventArgs)
            
            			Console.WriteLine(e.PagesCompleted)
            			Console.WriteLine("pages have been rasterized")
            
            		End Sub
            
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
                     
            			rasterizer.RasterizerProgress += new ProgressChangedEventHandler(RasterizerProgressing);
            
                     // Save the image.
                     rasterizer.DrawToMultiPageTiff("Output.tif", TiffImageFormat.TiffWithLzw, ImageSize.Dpi72);
                 }
            
            		static void RasterizerProgressing(object sender, RasterizerProgressChangedEventArgs e)
            		{
            			Console.WriteLine(e.PagesCompleted + " pages have been rasterized");
            		}
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.BackgroundColor">
            <summary>
            Gets or sets the background color of the output image. Page contents will be rendered on top of the specified background color.
            </summary>
            <remarks>Transparency is supported if RGBA color format is used. If color format is other than RGBA alpha value will be ignored. 
            In case of Monocrome or Grayscale images, background color specified will be converted to appropriate Monocrome/Grayscale color
            in the output image. </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.Dispose">
            <summary>
            Releases all resources that are used by the current instance of the class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.Dispose(System.Boolean)">
            <summary>
            Releases all resources that are used by the current instance of the class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PdfRasterizerException">
            <summary>
            Represents a PdfRasterizerException
            </summary>
            <licensing>
            This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF Rasterizer for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPage">
             <summary>
             Represents a page of the PDF rasterizer.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to one JPEG image for each page.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a JpegImageFormat object.
                     Dim jpegImageFormat As JpegImageFormat = New JpegImageFormat(80)
            
                     ' Create a rectangle for cropping a page
                     Dim rectangle As New RectangleF(New PointF(10F, 10F), New SizeF(100F, 100F))
            
                     ' Save the image.
                     Dim i As Integer
                     For i = 0 To rasterizer.Pages.Count - 1
                         rasterizer.Pages(i).Draw("Output" + i.ToString() + ".jpg", jpegImageFormat, ImageSize.Dpi72)
                         rasterizer.Pages(i).Draw("OutputCropped"+i.ToString()+".jpg", jpegImageFormat, ImageSize.Dpi72,rectangle)
                     Next
             
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
                        
                     // Create a JpegImageFormat object.
                     JpegImageFormat jpegImageFormat = new JpegImageFormat(80);
                     
                     // Create a rectangle for cropping a page
                     System.Drawing.RectangleF rectangle = new  System.Drawing.RectangleF(new PointF(10.0F, 10.0F),new SizeF(100.0F, 100.0F));
            
                     // Save the image.
                     for (int i = 0; i &lt; rasterizer.Pages.Count; i++)
                     {
                         rasterizer.Pages[i].Draw("Output"+i+".jpg", jpegImageFormat, ImageSize.Dpi72);
            
                         rasterizer.Pages[i].Draw("OutputCropped"+i+".jpg", jpegImageFormat, ImageSize.Dpi72,rectangle);
                     }
                 }
             }
             </code>
             </example> 
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPage.Draw(System.String,ceTe.DynamicPDF.Rasterizer.ImageFormat,ceTe.DynamicPDF.Rasterizer.ImageSize)">
            <summary>
            Rasterizes the page to an image and stores it to the given file path.
            </summary>
            <param name="filePath">Physical file path of the image.</param>
            <param name="imageFormat">Represents the image format to use.</param>
            <param name="imageSize">Represents the image size to use.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPage.Draw(ceTe.DynamicPDF.Rasterizer.ImageFormat,ceTe.DynamicPDF.Rasterizer.ImageSize)">
            <summary>
            Rasterizes the page to a byte array containing the image data.
            </summary>
            <param name="imageFormat">Represents the image format to use.</param>
            <param name="imageSize">Represents the image size to use.</param>
            <returns>Returns a byte array containing the image data.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPage.Draw(System.String,ceTe.DynamicPDF.Rasterizer.ImageFormat,ceTe.DynamicPDF.Rasterizer.ImageSize,System.Drawing.RectangleF)">
            <summary>
            Rasterizes the page to a Cropped image according to the given Dimensions and stores it to the given file path.
            </summary>
            <param name="filePath">Physical file path of the image.</param>
            <param name="imageFormat">Represents the image format to use.</param>
            <param name="imageSize">Represents the image size to use.</param>
            <param name="rectangle">Represents the cropped rectangular area of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPage.DrawToBitmap(ceTe.DynamicPDF.Rasterizer.BitmapColorFormat,ceTe.DynamicPDF.Rasterizer.ImageSize,System.Boolean)">
            <summary>
            Rasterizes the page and returns it as a <see cref="T:System.Drawing.Bitmap"/> object containing the image data.
            </summary>
            <param name="colorFormat">Represents the color format to use for the Bitmap.</param>
            <param name="imageSize">Represents the image size to use.</param>
            <param name="antiAliasing">Set to false to turn off anti-aliasing.</param>
            <returns>Returns a <see cref="T:System.Drawing.Bitmap"/> contain the image data.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPage.DrawToBitmap(ceTe.DynamicPDF.Rasterizer.BitmapColorFormat,ceTe.DynamicPDF.Rasterizer.ImageSize)">
            <summary>
            Rasterizes the page and returns it as a <see cref="T:System.Drawing.Bitmap"/> object containing the image data.
            </summary>
            <param name="colorFormat">Represents the color format to use for the Bitmap.</param>
            <param name="imageSize">Represents the image size to use.</param>
            <returns>Returns a <see cref="T:System.Drawing.Bitmap"/> contain the image data.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPage.Draw(System.IO.Stream,ceTe.DynamicPDF.Rasterizer.ImageFormat,ceTe.DynamicPDF.Rasterizer.ImageSize)">
            <summary>
            Rasterizes the page to an image and stores it to the given stream.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> containing the Pdf data. </param>
            <param name="imageFormat">Represents the image format to use.</param>
            <param name="imageSize">Represents the image size to use.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPageList">
             <summary>
             Represents a list of pages to rasterize.
             </summary>
             <example>This example demonstrates usage of PdfRasterizerPageList class.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
                 Sub Main()
            
                    ' Create a PdfRasterizer object.
                    Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
                    ' Set the size.
                    Dim fixedImageSize As New FixedImageSize(595, 841)
            
                    ' Getting the output bmp image.
                    Dim bmp As System.Drawing.Bitmap = rasterizer.Pages(0).DrawToBitmap(BitmapColorFormat.Rgb, fixedImageSize)
            
                    ' Save the image.
                    bmp.Save("Output.bmp")
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                static void Main(string[] args)
                {
                    // Create a PdfRasterizer object.
                    PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                    // Set the size.
                    FixedImageSize fixedImageSize = new FixedImageSize(595, 841);
            
                    // Getting the output bmp image.
                    System.Drawing.Bitmap bmp = rasterizer.Pages[0].DrawToBitmap(BitmapColorFormat.Rgb, fixedImageSize);
            
                    // Save the image.
                    bmp.Save("Output.bmp");
                }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPageList.Item(System.Int32)">
            <summary>
            Gets a page by index.
            </summary>
            <param name="index">Index of the page.</param>
            <returns></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PdfRasterizerPageList.Count">
            <summary>
            Gets the number of pages in page list.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PercentageImageSize">
             <summary>
             Represents a percentage image size.
             </summary>
             <remarks>
             Specifies PercentageImageSize as a single parameter horizontal percentage and vertical percentage is same value. 
             </remarks>
             <example>This example demonstrates how to rasterize a PDF document with a given percentage of its original size.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a PercentageImageSize object.
                     Dim percentageImageSize As PercentageImageSize = New PercentageImageSize(25)
            
                     ' Save the image.
                     rasterizer.Draw("Output.gif", ImageFormat.Gif, percentageImageSize)  
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
                         
                     // Create a PercentageImageSize object.
                     PercentageImageSize percentageImageSize = new PercentageImageSize(25); 
            
                     // Save the image.
                     rasterizer.Draw("Output.gif", ImageFormat.Gif, percentageImageSize);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PercentageImageSize.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PercentageImageSize"/> class.
            </summary>
            <param name="percentage">Percentage of the original image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PercentageImageSize.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PercentageImageSize"/> class.
            </summary>
            <param name="horizontalPercentage">Horizontal percentage of the image.</param>
            <param name="verticalPercentage">Vertical percentage of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PercentageImageSize.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PercentageImageSize"/> class.
            </summary>
            <param name="horizontalPercentage">Horizontal percentage of the image.</param>
            <param name="verticalPercentage">Vertical percentage of the image.</param>
            <param name="horizontalDpi">Horizontal DPI of the image.</param>
            <param name="verticalDpi">Vertical DPI of the image.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PercentageImageSize.HorizontalPercentage">
            <summary>
            Get or sets horizontal percentage of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PercentageImageSize.VerticalPercentage">
            <summary>
            Gets or sets vertical percentage of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PercentageImageSize.HorizontalDpi">
            <summary>
            Gets or sets horizontal resolution of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PercentageImageSize.VerticalDpi">
            <summary>
            Gets or sets vertical resolution of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PngColorFormat">
             <summary>
             Base class that represents an color format supported by PNG image format. 
             <remarks>
             PngColorFormat's derived classes are: <see cref="T:ceTe.DynamicPDF.Rasterizer.PngGrayscaleColorFormat"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.PngMonochromeColorFormat"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.PngRgbColorFormat"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.PngRgbAColorFormat"/> and <see cref="T:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat"/>. 
             </remarks>
             </summary>
             <example>This example demonstrates the usage of PngColorFormat class for creating a PNG image.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
                 Sub Main()
            
                    ' Create a PdfRasterizer object.
                    Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
                    ' Create a FixedImageSize object with required width and height.
                    Dim fixedImageSize As New FixedImageSize(595, 841)
            
                    'Create a PngImageFormat object with indexed color.
                    Dim oPngImageFormat As New PngImageFormat(PngColorFormat.Indexed)
            
                    ' Save the image.
                    rasterizer.Draw("Output.png", oPngImageFormat, fixedImageSize)
            
                 End Sub
            
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                static void Main(string[] args)
                {
                    // Create a PdfRasterizer object.
                    PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                    // Create a FixedImageSize object with required width and height.
                    FixedImageSize fixedImageSize = new FixedImageSize(595, 841);
            
                    //Create a PngImageFormat object with indexed color.
                    PngImageFormat oPngImageFormat = new PngImageFormat(PngColorFormat.Indexed);
            
                    // Save the image.
                    rasterizer.Draw("Output.png", oPngImageFormat, fixedImageSize);
                }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngColorFormat.Grayscale">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.PngGrayscaleColorFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngColorFormat.Monochrome">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.PngMonochromeColorFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngColorFormat.Rgb">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.PngRgbColorFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngColorFormat.RgbA">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.PngRgbAColorFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngColorFormat.Indexed">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat"/> class.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PngGrayscaleColorFormat">
             <summary>
             Represents a grayscale color format supported by PNG.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to a PNG grayscale image format.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
                 
                     ' Create PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf") 			
            
                     ' Create a PngImageFormat object.
                     Dim pngImageFormat As PngImageFormat = New PngImageFormat( PngColorFormat.Grayscale)
              
                     ' Create a ImageSize object.
                     Dim imageSize As DpiImageSize = New DpiImageSize(72.0F, 72.0F)
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, imageSize)
             		
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a PngImageFormat object.
                     PngImageFormat pngImageFormat = new PngImageFormat( PngColorFormat.Grayscale);
             
                     // Create a ImageSize object.
                     DpiImageSize imagesize = new DpiImageSize(72.0f, 72.0f);
            
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, imagesize);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PngImageFormat">
             <summary>
             Represents a PNG image format.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to PNG.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a PngImageFormat object.
                     Dim pngImageFormat As PngImageFormat = New PngImageFormat(PngColorFormat.Rgb)
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72)   
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a PngImageFormat object.
                     PngImageFormat pngImageFormat = new PngImageFormat(PngColorFormat.Rgb);
            
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PngImageFormat.#ctor(ceTe.DynamicPDF.Rasterizer.PngColorFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PngImageFormat"/> class.  
            </summary>
            <param name="pngColorFormat">Color format of the PNG image.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngImageFormat.ColorFormat">
            <summary>
            Gets or sets the PNG color format.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat">
             <summary>
             Represents an indexed color format supported by PNG.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to PNG indexed image format.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a PngIndexedColorFormat object.
                     Dim pngColorFormat As PngIndexedColorFormat  = New PngIndexedColorFormat(DitheringAlgorithm.FloydSteinberg,100)
                     pngColorFormat.ColorPalette = Palette.WindowsPalette
            
                     ' Create a PngImageFormat object.
                     Dim pngImageFormat As PngImageFormat = New PngImageFormat(pngColorFormat)
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72)   
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a PngIndexedColorFormat object.
                     PngIndexedColorFormat pngColorFormat = new PngIndexedColorFormat(DitheringAlgorithm.FloydSteinberg,100);
                     pngColorFormat.ColorPalette = Palette.WindowsPalette;
             
                     // Create a PngImageFormat object.
                     PngImageFormat pngImageFormat = new PngImageFormat(pngColorFormat);
            
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat.#ctor(ceTe.DynamicPDF.Rasterizer.Palette)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat"/> class.
            </summary>
            <param name="colorPalette">Specify a color palette.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat.#ctor(ceTe.DynamicPDF.Rasterizer.Palette,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat"/> class.
            </summary>
            <param name="colorPalette">Specify a color palette.</param>
            <param name="ditheringPercent">Specify  value of dithering in percentage.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat.#ctor(ceTe.DynamicPDF.Rasterizer.Palette,System.Int32,ceTe.DynamicPDF.Rasterizer.DitheringAlgorithm)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat"/> class.
            </summary>
            <param name="colorPalette">Specify a color palette.</param>
            <param name="ditheringPercent">Specify  value of dithering in percentage .</param>
            <param name="ditheringAlgorithm">Specify a dithering algorithm .</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat.DitheringAlgorithm">
            <summary>
            Gets or sets a dithering algorithm. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat.DitheringPercent">
            <summary>
            Gets or sets the value of dithering in percentage. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngIndexedColorFormat.ColorPalette">
            <summary>
            Gets or sets a palette type. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PngMonochromeColorFormat">
             <summary>
             Represents a monochrome color format supported by PNG.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to PNG monochrome image format.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a PngMonochromeColorFormat object.
                     Dim pngColorFormat As PngMonochromeColorFormat  = New PngMonochromeColorFormat(DitheringAlgorithm.FloydSteinberg,100)			
            
                     ' Create a PngImageFormat object.
                     Dim pngImageFormat As PngImageFormat = New PngImageFormat(pngColorFormat)
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72)   
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a PngMonochromeColorFormat object.
                     PngMonochromeColorFormat pngColorFormat = new PngMonochromeColorFormat(DitheringAlgorithm.FloydSteinberg,100);
             
                     // Create a PngImageFormat object.
                     PngImageFormat pngImageFormat = new PngImageFormat(pngColorFormat);
            
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.PngMonochromeColorFormat.#ctor(ceTe.DynamicPDF.Rasterizer.DitheringAlgorithm,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.PngMonochromeColorFormat"/> class.
            </summary>
            <param name="ditheringAlgorithm">Specify a dithering algorithm .</param>
            <param name="ditheringPercent">Specify  value of dithering in percentage .</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngMonochromeColorFormat.DitheringAlgorithm">
            <summary>
            Gets or sets a dithering algorithm. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngMonochromeColorFormat.DitheringPercent">
            <summary>
            Gets or sets the value of dithering in percentage. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.PngMonochromeColorFormat.BlackThreshold">
            <summary>
            Gets or sets the value of black threshold. 
            </summary>
            <remarks>
            Value of black threshold should be between 0 and 255. All pixels with color value below or equal to black threshold will be converted to black and all pixels with color value 
            above black threshold will be converted to white.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PngRgbAColorFormat">
             <summary>
             Represents a RGBA color format supported by PNG.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to PNG image in RGBA color format.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a PngImageFormat object.
                     Dim pngImageFormat As PngImageFormat = New PngImageFormat( PngColorFormat.RgbA)
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72)   
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a PngImageFormat object.
                     PngImageFormat pngImageFormat = new PngImageFormat( PngColorFormat.RgbA);
            
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.PngRgbColorFormat">
             <summary>
             Represents a RGB color format supported by PNG.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to PNG image in RGB color format.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a PngImageFormat object.
                     Dim pngImageFormat As PngImageFormat = New PngImageFormat( PngColorFormat.Rgb)
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72)   
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     // Create a PngImageFormat object.
                     PngImageFormat pngImageFormat = new PngImageFormat( PngColorFormat.Rgb);
            
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.QuantizationAlgorithm">
             <summary>
             Represents different kind of quantization methods.
             </summary>
             <example>This example demonstrates the usage of QuantizationAlgorithm enum in indexed image creation. <p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
            
                Sub Main()
            
                    ' Create a PdfRasterizer object.
                    Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
                    ' Create a PngIndexedColorFormat object. 
                    Dim pngIndexedColorFormat As New PngIndexedColorFormat(ImageFormat.DefaultColorPalette,100,DitheringAlgorithm.FloydSteinberg)
            
                    ' Set the Colorpalette property to AutoPalette.
                    pngIndexedColorFormat.ColorPalette = New AutoPalette(QuantizationAlgorithm.Octree, 256)
            
                    ' Create a PngImageFormat using PngIndexedColorFormat object.
                    Dim pngImageFormat As New PngImageFormat(pngIndexedColorFormat)
            
                    ' Set the size.
                    Dim fixedImageSize As New FixedImageSize(595, 841)
            
                    ' Save the image.
                    rasterizer.Draw("Output.png", pngImageFormat, fixedImageSize)
            
                End Sub
            
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                static void Main(string[] args)
                {
             	   // Create a PdfRasterizer object.
            	   PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
            	   // Create a PngIndexedColorFormat object. 
            	   PngIndexedColorFormat pngIndexedColorFormat = new PngIndexedColorFormat(ImageFormat.DefaultColorPalette,100,DitheringAlgorithm.FloydSteinberg);
            
            	   // Set the Colorpalette property to AutoPalette.
            	   pngIndexedColorFormat.ColorPalette = new AutoPalette(QuantizationAlgorithm.Octree, 256);
            
            	   // Create a PngImageFormat using PngIndexedColorFormat object.
            	   PngImageFormat pngImageFormat = new PngImageFormat(pngIndexedColorFormat);
            
            	   // Set the size.
            	   FixedImageSize fixedImageSize = new FixedImageSize(595, 841);
            
            	   // Save the image.
            	   rasterizer.Draw("Output.png", pngImageFormat, fixedImageSize);
               
                }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.QuantizationAlgorithm.Octree">
            <summary>
            Represents Octree type of quantization.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.QuantizationAlgorithm.MedianCut">
            <summary>
            Represents MedianCut type of quantization.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.RasterizerProgressChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.RasterizerProgress"/> event. 
            </summary>
            <example> For example refer to <see cref="E:ceTe.DynamicPDF.Rasterizer.PdfRasterizer.RasterizerProgress"/> event. </example>
            <licensing>
            This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF Rasterizer for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.RasterizerProgressChangedEventArgs.PagesCompleted">
            <summary>
            Gets the number of pages rasterized. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.Rgb24Pixel">
            <summary>
            Represents a RGB ( red, green, blue ) color pixel.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.Rgb24Pixel.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a Color pixel from the three RGB component (red, green and blue) values. Value of each component is limited to 8 bits.
            </summary>
            <param name="red">The red component. Valid values are 0 through 255.</param>
            <param name="green">The green component. Valid values are 0 through 255.</param>
            <param name="blue">The blue component. Valid values are 0 through 255.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.Rgb24Pixel.Red">
            <summary>
            Gets or sets the red component. Valid values are 0 through 255.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.Rgb24Pixel.Green">
            <summary>
            Gets or sets the green component. Valid values are 0 through 255.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.Rgb24Pixel.Blue">
            <summary>
            Gets or sets the blue component. Valid values are 0 through 255.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.TiffColorFormat">
             <summary>
             Base class that represents a color format supported by TIFF image format. 
             <remarks>
             TiffColorFormat's derived classes are: <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffGrayscaleColorFormat"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffRgbColorFormat"/>, <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffRgbAColorFormat"/> and <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat"/>. 
             </remarks>
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to Tiff image using TiffColorFormat.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
                 Sub Main()
            
                    ' Create a PdfRasterizer object.
                    Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
                    ' Create a FixedImageSize object with required width and height.
                    Dim fixedImageSize As New FixedImageSize(595, 841)
            
                    'Create a TiffImageFormat object with rgb color.
                    Dim oTiffImageFormat As New TiffImageFormat(TiffColorFormat.Rgb)
            
                    ' Save the image.
                    rasterizer.Draw("Output.tif", oTiffImageFormat, fixedImageSize)
            
                 End Sub
            
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                static void Main(string[] args)
                {
                    // Create a PdfRasterizer object.
                    PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                    // Create a FixedImageSize object with required width and height.
                    FixedImageSize fixedImageSize = new FixedImageSize(595, 841);
            
                    //Create a TiffImageFormat object with rgb color.
                    TiffImageFormat oTiffImageFormat = new TiffImageFormat(TiffColorFormat.Rgb);
            
                    // Save the image.
                    rasterizer.Draw("Output.tif", oTiffImageFormat, fixedImageSize);
                }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffColorFormat.Grayscale">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffGrayscaleColorFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffColorFormat.Monochrome">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffColorFormat.Rgb">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffRgbColorFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffColorFormat.RgbA">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffRgbAColorFormat"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffColorFormat.Indexed">
            <summary>
            Gets a default <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat"/> class.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.TiffGrayscaleColorFormat">
             <summary>
             Represents a grayscale color format supported by TIFF.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to TIFF image in grayscale color format.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a TiffImageFormat object.
                     Dim tiffImageFormat As TiffImageFormat = New TiffImageFormat(TiffColorFormat.Grayscale)
            
                     ' Save the image.
                     rasterizer.Draw("Output.tiff", tiffImageFormat, ImageSize.Dpi72)   
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
             
                     // Create a TiffImageFormat object.
                     TiffImageFormat tiffImageFormat = new TiffImageFormat(TiffColorFormat.Grayscale);
            
                     // Save the image.
                     rasterizer.Draw("Output.tiff", tiffImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.TiffImageFormat">
             <summary>
             Represents a TIFF image format
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to  TIFF image format.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a TiffImageFormat object.
                     Dim tiffImageFormat As TiffImageFormat = New TiffImageFormat(TiffColorFormat.Rgb)
            
                     ' Create a PercentageImageSize object. 
                     Dim percentageImageSize As PercentageImageSize = New PercentageImageSize(50)
            
                     ' Save the image.
                     rasterizer.Draw("Output.tif", tiffImageFormat, percentageImageSize)
             
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
             
                     // Create a TiffImageFormat object.
                     TiffImageFormat tiffImageFormat = new TiffImageFormat(TiffColorFormat.Rgb);
                         
                     // Create a PercentageImageSize object. 
                     PercentageImageSize percentageImageSize = new PercentageImageSize(50);
            
                     // Save the image.
                     rasterizer.Draw("Output.tif", tiffImageFormat,percentageImageSize);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.TiffImageFormat.#ctor(ceTe.DynamicPDF.Rasterizer.TiffColorFormat)">
            <summary>
            Initializes a new instance of the class.<see cref="T:ceTe.DynamicPDF.Rasterizer.TiffImageFormat"/>
            </summary>
            <param name="tiffColorFormat">Color format of the tiff image.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffImageFormat.ColorFormat">
            <summary>
            Gets or sets the Tiff color format.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat">
             <summary>
             Represents an indexed color format supported by TIFF.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to TIFF image in indexed color format.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create an instance of TiffIndexedColorFormat class.
                     Dim tiffColorFormat As TiffIndexedColorFormat  = New TiffIndexedColorFormat(ImageFormat.DefaultColorPalette,90,DitheringAlgorithm.FloydSteinberg)
                     tiffColorFormat.ColorPalette = Palette.WebPalette
            
                     ' Create a TiffImageFormat object.
                     Dim tiffImageFormat As TiffImageFormat = New TiffImageFormat(tiffColorFormat)
            
                     ' Save the image.
                     rasterizer.Draw("Output.tiff", tiffImageFormat, ImageSize.Dpi72)   
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
             
                     // Create an instance of TiffIndexedColorFormat class.
                     TiffIndexedColorFormat tiffColorFormat = new TiffIndexedColorFormat(ImageFormat.DefaultColorPalette,90,DitheringAlgorithm.FloydSteinberg);
                     tiffColorFormat.ColorPalette = Palette.WebPalette;
            
                     // Create a TiffImageFormat object.
                     TiffImageFormat tiffImageFormat = new TiffImageFormat(tiffColorFormat);
            
                     // Save the image.
                     rasterizer.Draw("Output.tiff", tiffImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat.#ctor(ceTe.DynamicPDF.Rasterizer.Palette)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat"/> class.
            </summary>
            <param name="colorPalette">Specify a color palette.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat.#ctor(ceTe.DynamicPDF.Rasterizer.Palette,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat"/> class.
            </summary>
            <param name="colorPalette">Specify a color palette.</param>
            <param name="ditheringPercent">Specify  value of dithering in percentage.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat.#ctor(ceTe.DynamicPDF.Rasterizer.Palette,System.Int32,ceTe.DynamicPDF.Rasterizer.DitheringAlgorithm)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat"/> class.
            </summary>
            <param name="colorPalette">Specify a color palette.</param>
            <param name="ditheringPercent">Specify  value of dithering in percentage .</param>
            <param name="ditheringAlgorithm">Specify a dithering algorithm .</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat.DitheringAlgorithm">
            <summary>
            Gets or sets a dithering algorithm. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat.DitheringPercent">
            <summary>
            Gets or sets the value of dithering in percentage. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffIndexedColorFormat.ColorPalette">
            <summary>
            Gets or sets a palette type. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat">
             <summary>
             Represents a monochrome color format supported by TIFF.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to TIFF image in monochrome color format.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create an instance of TiffMonochromeColorFormat class.
                     Dim tiffColorFormat As TiffMonochromeColorFormat  = New TiffMonochromeColorFormat(TiffMonochromeCompressionType.CcitGroup4)
                     tiffColorFormat.DitheringAlgorithm = DitheringAlgorithm.FloydSteinberg
                     tiffColorFormat.DitheringPercent = 75
            
                     ' Create a TiffImageFormat object.
                     Dim tiffImageFormat As TiffImageFormat = New TiffImageFormat(tiffColorFormat)
            
                     ' Save the image.
                     rasterizer.Draw("Output.tiff", tiffImageFormat, ImageSize.Dpi72)   
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
             
                     // Create an instance of TiffMonochromeColorFormat class.
                     TiffMonochromeColorFormat tiffColorFormat = new TiffMonochromeColorFormat(TiffMonochromeCompressionType.CcitGroup4);
                     tiffColorFormat.DitheringAlgorithm = DitheringAlgorithm.FloydSteinberg;
                     tiffColorFormat.DitheringPercent = 75;
            
                     // Create a TiffImageFormat object.
                     TiffImageFormat tiffImageFormat = new TiffImageFormat(tiffColorFormat);
            
                     // Save the image.
                     rasterizer.Draw("Output.tiff", tiffImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat.#ctor(ceTe.DynamicPDF.Rasterizer.TiffMonochromeCompressionType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat"/> class.
            </summary>
            <param name="compressionType">Specify a compression type.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat.#ctor(ceTe.DynamicPDF.Rasterizer.TiffMonochromeCompressionType,ceTe.DynamicPDF.Rasterizer.DitheringAlgorithm,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat"/> class.
            </summary>
            <param name="compressionType">Specify a compression type.</param>
            <param name="ditheringAlgorithm">Specify a dithering algorithm .</param>
            <param name="ditheringPercent">Specify  value of dithering in percentage .</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat.DitheringAlgorithm">
            <summary>
            Gets or sets a dithering algorithm. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat.DitheringPercent">
            <summary>
            Gets or sets the value of dithering in percentage. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat.CompressionType">
            <summary>
            Gets or sets the compression type for TIFF monochrome image format. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.TiffMonochromeColorFormat.BlackThreshold">
            <summary>
            Gets or sets the value of black threshold. 
            </summary>
            <remarks>
            Value of black threshold should be between 0 and 255. All pixels with color value below or equal to black threshold will be converted to black and all pixels with color value 
            above black threshold will be converted to white.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.TiffMonochromeCompressionType">
             <summary>
             Represents compression formats supported by TIFF monochrome format. 
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to  TIFF Monochrome image with CcitGroup4 Compression.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
            
                Sub Main()
            
                    ' Create a PdfRasterizer object.
                    Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
                    ' Create a FixedImageSize object with required width and height.
                    Dim fixedImageSize As New FixedImageSize(595, 841)
            
                    'Create a TiffMonochromeColorFormat object with CcitGroup3 compression. 
                    Dim oTiffColorFormat As TiffColorFormat = New TiffMonochromeColorFormat(TiffMonochromeCompressionType.CcitGroup4)
            
                    'Create a TiffImageFormat object with monocrome color.
                    Dim oTiffImageFormat As New TiffImageFormat(oTiffColorFormat)
            
                    ' Save the image.
                    rasterizer.Draw("Output.tif", oTiffImageFormat, fixedImageSize)
            
            
            
                End Sub
            
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                static void Main(string[] args)
                {
                    // Create a PdfRasterizer object.
                    PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                    // Create a FixedImageSize object with required width and height.
                    FixedImageSize fixedImageSize = new FixedImageSize(595, 841);
            
                    //Create a TiffMonochromeColorFormat object with CcitGroup3 compression. 
                    TiffColorFormat oTiffColorFormat = new TiffMonochromeColorFormat(TiffMonochromeCompressionType.CcitGroup4);
            
                    //Create a TiffImageFormat object with monochrome color.
                    TiffImageFormat oTiffImageFormat = new TiffImageFormat(oTiffColorFormat);
            
                    // Save the image.
                    rasterizer.Draw("Output.tif", oTiffImageFormat, fixedImageSize);
                }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.TiffMonochromeCompressionType.CcitGroup3">
            <summary>
            Compression of type CCIT Group3.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.TiffMonochromeCompressionType.CcitGroup4">
            <summary>
            Compression of type CCIT Group4.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.TiffRgbAColorFormat">
             <summary>
             Represents a RGBA color format supported by TIFF.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to TIFF image in RGBA color format.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a TiffImageFormat object.
                     Dim tiffImageFormat As TiffImageFormat = New TiffImageFormat(TiffColorFormat.RgbA)
            
                     ' Save the image.
                     rasterizer.Draw("Output.tiff", tiffImageFormat, ImageSize.Dpi72)   
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
             
                     // Create a TiffImageFormat object.
                     TiffImageFormat tiffImageFormat = new TiffImageFormat(TiffColorFormat.RgbA);
            
                     // Save the image.
                     rasterizer.Draw("Output.tiff", tiffImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.TiffRgbColorFormat">
             <summary>
             Represents a RGB color format supported by TIFF.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to TIFF image in RGB color format.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
             
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")
            
                     ' Create a TiffImageFormat object.
                     Dim tiffImageFormat As TiffImageFormat = New TiffImageFormat(TiffColorFormat.Rgb)
            
                     ' Save the image.
                     rasterizer.Draw("Output.tiff", tiffImageFormat, ImageSize.Dpi72)   
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
             
                     // Create a TiffImageFormat object.
                     TiffImageFormat tiffImageFormat = new TiffImageFormat(TiffColorFormat.Rgb);
            
                     // Save the image.
                     rasterizer.Draw("Output.tiff", tiffImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.UnitConverter">
            <summary>
            Utility for converting to and from typesetting points.
            </summary>
            <licensing>
            This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF Rasterizer for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.UnitConverter.PointsToInches(System.Double)">
            <summary>
            Converts from typesetting points to inches.
            </summary>
            <param  name="size">Size in points.</param>
            <returns>The size in inches.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.UnitConverter.PointsToMillimeters(System.Double)">
            <summary>
            Converts from typesetting points to millimeters.
            </summary>
            <param  name="size">Size in points.</param>
            <returns>The size in typesetting points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.UnitConverter.InchesToPoints(System.Double)">
            <summary>
            Converts from inches to typesetting points.
            </summary>
            <param  name="size">Size in inches.</param>
            <returns>The size in inches.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.UnitConverter.MillimetersToPoints(System.Double)">
            <summary>
            Converts from millimeters to typesetting points.
            </summary>
            <param  name="size">Size in millimeters.</param>
            <returns>The size in typesetting points.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.UnitType">
             <summary>
             Represents a UnitType value. 
             </summary>
             <example>This example demonstrates the use of UnitType class.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
            
             Module MyModule
            
            
                Sub Main()
                    ' Create a PdfRasterizer object.
                    Dim rasterizer As New PdfRasterizer("InputPdfFile.pdf")
            
                    ' Create a FixedImageSize object with required width,height and UnitType.
                    Dim fixedImageSize As New FixedImageSize(595, 841, UnitType.Point)
            
                    ' Save the image.
                    rasterizer.Draw("Output.gif", ImageFormat.Gif, fixedImageSize)
            
                End Sub
            
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
            
             class MyClass
             {
                static void Main(string[] args)
                {
                    // Create a PdfRasterizer object.
                    PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                    // Create a FixedImageSize object with required width,height and UnitType.
                    FixedImageSize fixedImageSize = new FixedImageSize(595, 841, UnitType.Point);
            
                    // Save the image.
                    rasterizer.Draw("Output.gif", ImageFormat.Gif, fixedImageSize);
                }
            
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.UnitType.Millimeter">
            <summary>
            Unit values in Millimeters.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.UnitType.Inch">
            <summary>
            Unit values in Inches.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Rasterizer.UnitType.Point">
            <summary>
            Unit values in Typesetting Points.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.UserPalette">
             <summary>
             Represents an UserPalette class which can be used to specify a color palette.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to PNG image with a user palette.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")	
            
                     Dim pngIndexedColorFormat As PngIndexedColorFormat  = New PngIndexedColorFormat(ImageFormat.DefaultColorPalette,100,DitheringAlgorithm.FloydSteinberg)
            			
                     Dim color() As ceTe.DynamicPDF.Rasterizer.Color = New ceTe.DynamicPDF.Rasterizer.Color() {ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255, 0, 0, 0), ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255, 255, 255, 255), ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255, 255, 0, 0), ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255, 0, 255, 0), ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255, 0, 0, 255), ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255, 255, 255, 0), ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255, 0, 255, 255)}
                     Dim userpalette As UserPalette  = New UserPalette(color)
            
                     ' Set a user selected color palette.
                     pngIndexedColorFormat.ColorPalette = userpalette
            
                     Dim pngImageFormat As PngImageFormat  = New PngImageFormat(pngIndexedColorFormat)		
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72)
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     PngIndexedColorFormat pngIndexedColorFormat = new PngIndexedColorFormat(ImageFormat.DefaultColorPalette,100,DitheringAlgorithm.FloydSteinberg);
            
                     ceTe.DynamicPDF.Rasterizer.Color[] color = new ceTe.DynamicPDF.Rasterizer.Color[] { ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255,0,0,0),ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255,255,255,255),ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255,255,0,0),ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255,0,255,0),ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255,0,0,255),ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255,255,255,0),ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255,0,255,255),ceTe.DynamicPDF.Rasterizer.Color.FromArgb(255,255,0,255)};
                     UserPalette userpalette = new UserPalette(color);
            
                     // Set a user selected color palette.
                     pngIndexedColorFormat.ColorPalette = userpalette;
            
                     PngImageFormat pngImageFormat = new PngImageFormat(pngIndexedColorFormat);
             
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.UserPalette.#ctor(System.Drawing.Color[])">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.UserPalette"/> class.
            </summary>
            <param name="palette">A color palette.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Rasterizer.UserPalette.Item(System.Int32)">
            <summary>
            Gets or sets color at specific index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.WebPalette">
             <summary>
             Represents a Web palette.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to PNG image with Web palette.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")	
            
                     Dim pngIndexedColorFormat As PngIndexedColorFormat  = New PngIndexedColorFormat(ImageFormat.DefaultColorPalette,100,DitheringAlgorithm.FloydSteinberg)
                     pngIndexedColorFormat.ColorPalette = Palette.WebPalette
            
                     Dim pngImageFormat As PngImageFormat  = New PngImageFormat(pngIndexedColorFormat)		
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72)
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     PngIndexedColorFormat pngIndexedColorFormat = new PngIndexedColorFormat(ImageFormat.DefaultColorPalette,100,DitheringAlgorithm.FloydSteinberg);
                     pngIndexedColorFormat.ColorPalette = Palette.WebPalette;
            
                     PngImageFormat pngImageFormat = new PngImageFormat(pngIndexedColorFormat);
             
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.WebPalette.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.WebPalette"/> class.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.WindowsPalette">
             <summary>
             Represents a Windows palette.
             </summary>
             <example>This example demonstrates how to rasterize a PDF document to PNG image with Windows palette.<p/> 
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Rasterizer
             
             Module MyModule
             
                 Sub Main()
            
                     ' Create a PdfRasterizer object.
                     Dim rasterizer As PdfRasterizer = New PdfRasterizer("InputPdfFile.pdf")	
            
                     Dim pngIndexedColorFormat As PngIndexedColorFormat  = New PngIndexedColorFormat(ImageFormat.DefaultColorPalette,100,DitheringAlgorithm.FloydSteinberg)
                     pngIndexedColorFormat.ColorPalette = Palette.WindowsPalette
            
                     Dim pngImageFormat As PngImageFormat  = New PngImageFormat(pngIndexedColorFormat)		
            
                     ' Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72)
            
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Rasterizer;
             
             class MyClass
             {
                 static void Main(string[] args)
                 {
                     // Create a PdfRasterizer object.
                     PdfRasterizer rasterizer = new PdfRasterizer("InputPdfFile.pdf");
            
                     PngIndexedColorFormat pngIndexedColorFormat = new PngIndexedColorFormat(ImageFormat.DefaultColorPalette,100,DitheringAlgorithm.FloydSteinberg);
                     pngIndexedColorFormat.ColorPalette = Palette.WindowsPalette;
            
                     PngImageFormat pngImageFormat = new PngImageFormat(pngIndexedColorFormat);
             
                     // Save the image.
                     rasterizer.Draw("Output.png", pngImageFormat, ImageSize.Dpi72);
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF Rasterizer feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF Rasterizer for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.WindowsPalette.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Rasterizer.WindowsPalette"/> class.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Rasterizer.LicensingException">
            <summary>
            Represents a licensing exception.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Rasterizer.LicensingException.#ctor(System.String)">
            <summary>Initializes a new instance of LicensingException</summary>
            <param name="message">Message for the licensing exception</param>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.SinglePage">
            <summary>
            One page at a time.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.OneColumn">
            <summary>
            Pages in a column.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.TwoColumnLeft">
            <summary>
            Pages in two columns, odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.TwoColumnRight">
            <summary>
            Pages in two columns, odd-numbered pages on the right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.TwoPageLeft">
            <summary>
            Two pages at a time, odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.TwoPageRight">
            <summary>
            Two pages at a time, odd-numbered pages on the right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.Auto">
            <summary>
            ShowOutlines is used if outlines are present. If not ShowNone is used.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.ShowNone">
            <summary>
            Outlines and Thumbnails toolbars are not shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.ShowOutlines">
            <summary>
            Outlines toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.ShowThumbnails">
            <summary>
            Thumbnails toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.ShowOptionalContent">
            <summary>
            Optional content is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.ShowAttachments">
            <summary>
            Attachments toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.FullScreen">
            <summary>
            Document is show in full screen mode.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.ResourceType.PageContents">
            <summary>
            Page contents resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.ResourceType.Annotation">
            <summary>
            Annotation resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.ResourceType.Default">
            <summary>
            Default resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.ResourceType.XObject">
            <summary>
            XObject resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.ResourceType.Font">
            <summary>
            Font resource.
            </summary>
        </member>
    </members>
</doc>
